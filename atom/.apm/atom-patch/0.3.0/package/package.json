{"name":"atom-patch","version":"0.3.0","description":"A data structure to efficiently represent the results of applying patches.","main":"dist/patch.js","scripts":{"test":"mocha ./test/helpers/setup test/*","tdd":"electron-mocha --renderer --interactive --recursive ./test/helpers/setup  test/","prepublish":"npm run standard && npm run clean && npm run build","standard":"standard --recursive src test","build":"babel src --out-dir dist","clean":"rm -rf dist","ci":"npm run standard && npm run test"},"repository":{"type":"git","url":"git+https://github.com/nathansobo/atom-patch.git"},"keywords":["patch data-structure"],"author":{"name":"Nathan Sobo","email":"nathan@github.com"},"license":"MIT","bugs":{"url":"https://github.com/nathansobo/atom-patch/issues"},"homepage":"https://github.com/nathansobo/atom-patch","devDependencies":{"babel":"^5.0.0","babel-eslint":"^4.0.5","chai":"^2.0.0","electron-mocha":"git://github.com/nathansobo/electron-mocha.git#interactive-option","electron-prebuilt":"^0.30.1","mocha":"^2.3.4","phonetic":"^0.1.0","standard":"^4.5.4"},"dependencies":{"random-seed":"^0.2.0"},"standard":{"parser":"babel-eslint","global":["describe","it","expect"]},"readme":"# atom-patch [![Build Status](https://travis-ci.org/atom/atom-patch.svg?branch=master)](https://travis-ci.org/atom/atom-patch)\n\nThis data structure efficiently represents a transformation from input to output text, and it's useful for aggregating and combining changes that occur at different points in time and space.\n\n## Contributing\n\n```bash\n# clone this repository\ngit clone https://github.com/atom/atom-patch\n\ncd atom-patch\nnpm install\n```\n\nUse `npm test` or `npm run tdd` to run the test suite.\n\n### Recompiling Patch's Flatbuffer Schema\n\n`Patch` uses [flat buffers](https://google.github.io/flatbuffers/) to represent its serialized state. If you want to make any change to the underlying schema you have to download and compile `flatc` first:\n\n```bash\n# clone flatbuffers repository and checkout the version tested with this library\ngit clone https://github.com/google/flatbuffers\ngit checkout 959866b\n\n# compile flatbuffers\npushd flatbuffers/build/XCode/\nxcodebuild\npopd\n```\n\nThis will create a `flatc` executable in flatbuffers top level directory. You can recompile `src/serialization-schema.fbs` by running:\n\n```bash\ncd atom-patch\n../flatbuffers/flatc -o src --js serialization-schema.fbs\n```\n\nAfter you do that, please make sure to to change the generated file's last line to:\n\n```diff\n// Exports for Node.js and RequireJS\n- this.Serialization = Serialization;\n+ module.exports = Serialization;\n```\n\nPlease, note that we have included a patched version of the flatbuffers javascript library under vendor/flatbuffers.js because the original one has the same problem.\n","readmeFilename":"README.md","_id":"atom-patch@0.3.0","_shasum":"e007ac55cb500a8a66c2d8eef7a4375d31428f54","_resolved":"https://registry.npmjs.org/atom-patch/-/atom-patch-0.3.0.tgz","_from":"https://registry.npmjs.org/atom-patch/-/atom-patch-0.3.0.tgz"}